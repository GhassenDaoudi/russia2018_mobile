package com.mycompany.myapp;

import com.codename1.components.InfiniteProgress;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.io.Storage;
import com.codename1.ui.Toolbar;
import com.mycompany.Service.ServiceChat;
import com.mycompany.Service.ServiceUser;
import com.mycompany.gui.ArticleFormHome;
import com.mycompany.gui.CountForm;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        //System.out.println(new ServiceGalerie().afficher());
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {
        if (current != null) {
            current.show();
            return;
        }
        InfiniteProgress prog = new InfiniteProgress();
        Storage.getInstance().clearCache();
        prog.setAnimation(theme.getImage("k.png"));
        Dialog dlg = prog.showInifiniteBlocking();
        String idUser = (String)Storage.getInstance().readObject("idUser");
        if(idUser!=null){
            int test = Integer.parseInt(idUser);
            if(test!=-1){
                ServiceUser.login(test);
            }
        }
        ArticleFormHome cfh = new ArticleFormHome();
        dlg.dispose();
        cfh.getForm().show();
    }

    public void stop() {
        current = getCurrentForm();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
    }

}
